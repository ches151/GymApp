(function(){"use strict";function t(t,u,f,e,o,s,h,c,l,a,v,y){function g(n){var t,i;b(n);t=n.exerciseSets;t.length&&(i=t[0].workoutId,a.query({id:p.workoutId},k))}function b(n){n?p.workoutSession=new r(n):(p.workoutSession=new r({dateStart:new Date,dateEnd:null,id:p.sessionId}),y.save(p.workoutSession))}function nt(){b();a.query({id:p.workoutId},k)}function k(n){tt(n);it(n);rt(n);d(p.exercises[0])}function tt(n){c.title=n.name;p.workout=n}function it(n){p.exercises=n.exercises}function rt(n){var t=[],r=p.workoutSession.id;n.exercises.forEach(function(u,f){t.push([new i({exerciseId:u.id,workoutId:n.id,workoutSessionId:r,weight:null,unit:"kg",serialNumber:f,numberOfRepetitions:null})])});p.exerciseSets=t;t=null}function d(n){p.activeExercise=n}function ut(){ft()}function ft(){p.workoutSession.dateEnd=new Date;y.update(p.workoutSession)}function et(n){var t=p.exerciseSets[n];return t.length>1||t.length===1&&w(t[0])}function ot(i,r){var u=p.workoutSession.id,f=r.name;st(r.id,u).then(function(t){o.show({controller:n,controllerAs:"ctrl",templateUrl:"app/partials/exerciseset-one-exercise.html",parent:angular.element(document.body),targetEvent:i,clickOutsideToClose:!0,fullscreen:!1,locals:{exerciseSets:t,exerciseName:f}})},function(n){t.warn(n.message)})}function st(n,t){var i=s.defer();return v.getPrevExerciseSessionId({exerciseId:n,workoutSessionId:t},function(t){t&&t.value&&t.value.length&&v.getExercisesSetsFromSession({exerciseId:n,workoutSessionId:t.value[0].workoutSessionId},function(n){n&&n.value&&n.value.length?i.resolve(n.value):i.reject({message:"No previous exercise sets are available"})})}),i.promise}function ht(n,t){switch(n.keyCode){case u.KEY_CODE.ENTER:case u.KEY_CODE.TAB:ct(t)}}function ct(n){var t=p.exerciseSets[n],r,u;yt(t)&&(r=t[t.length-1],r.date=new Date,u=p.workoutSession.id,t.push(new i({exerciseId:r.exerciseId,workoutId:r.workoutId,workoutSessionId:u,weight:null,unit:r.unit,serialNumber:t.length,numberOfRepetitions:null})))}function lt(n,t,i){w(i)?at(i):pt(i)&&vt(t,i)}function at(n){return n.id?v.update(n):(n.id=h.guid(),v.save(n))}function vt(n,t){var r=t.id,i,u;r&&v.remove({id:r});i=p.exerciseSets[n];i.length>1&&(u=i.indexOf(t),i.splice(u,1))}function yt(n){return n?n.every(function(n){return w(n)}):!1}function w(n){return n.weight>0&&n.numberOfRepetitions>0}function pt(n){return!n.weight&&!n.numberOfRepetitions}t.log("gym.WorkoutSessionCtrl constructor");c.canGoBack=!0;var p=this;p.workoutId=f.workoutId;p.sessionId=f.sessionId;p.workout={};p.workoutSession=null;p.activeExercise={};p.exercises=[];p.exerciseSets=[];p.massUnits=l;p.setActiveExercise=d;p.showHistory=ot;p.onKeydown=ht;p.onBlur=lt;p.isExerciseAccomplished=et;e.$on("$destroy",ut);y.query({id:p.sessionId},g,nt)}function n(n,t,i){var r=this;r.exerciseName=t;r.exerciseSets=i;r.hide=function(){n.hide()};r.cancel=function(){n.cancel()}}function i(n){this.id=n.id;this.date=n.date;this.rowVersion=n.rowVersion;this.exerciseId=n.exerciseId;this.workoutId=n.workoutId;this.workoutSessionId=n.workoutSessionId;this.weight=n.weight;this.unit=n.unit;this.serialNumber=n.serialNumber;this.numberOfRepetitions=n.numberOfRepetitions}function r(n){this.id=n.id;this.dateStart=n.dateStart;this.dateEnd=n.dateEnd;this.rowVersion=n.rowVersion;this.exerciseSets=n.exerciseSets}angular.module("gym").controller("WorkoutSessionCtrl",t);t.$inject=["$log","$mdConstant","$routeParams","$scope","$mdDialog","$q","tools","header","massUnits","workoutsService","exerciseSetsService","workoutSessionsService"];angular.module("gym").controller("ExerciseSetOneExerciseCtrl",n);n.$inject=["$mdDialog","exerciseName","exerciseSets"]})();
//# sourceMappingURL=gym.workout-session-controller.min.js.map
